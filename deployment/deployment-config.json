{
  "version": "1.0.0",
  "deploymentStrategies": {
    "blue-green": {
      "enabled": true,
      "description": "Zero-downtime deployment with traffic switching",
      "rollbackTime": "< 30 seconds",
      "riskLevel": "low"
    },
    "rolling": {
      "enabled": true,
      "description": "Gradual deployment across instances",
      "rollbackTime": "2-5 minutes",
      "riskLevel": "medium"
    },
    "canary": {
      "enabled": false,
      "description": "Gradual traffic percentage rollout",
      "rollbackTime": "< 1 minute",
      "riskLevel": "low"
    }
  },
  "environments": {
    "development": {
      "autoDeployOnPush": true,
      "requiresApproval": false,
      "parallelDeployments": true,
      "maxActiveDeployments": 4,
      "healthCheckTimeout": 30000,
      "infrastructure": {
        "slots": ["dev-slot-1", "dev-slot-2", "dev-slot-3", "dev-slot-4"],
        "loadBalancer": "dev-lb.anvil.local",
        "database": "dev-db.anvil.local"
      }
    },
    "staging": {
      "autoDeployOnPush": false,
      "requiresApproval": true,
      "parallelDeployments": true,
      "maxActiveDeployments": 2,
      "healthCheckTimeout": 60000,
      "infrastructure": {
        "slots": ["staging-slot-1", "staging-slot-2"],
        "loadBalancer": "staging-lb.anvil.local",
        "database": "staging-db.anvil.local"
      }
    },
    "production": {
      "autoDeployOnPush": false,
      "requiresApproval": true,
      "parallelDeployments": false,
      "maxActiveDeployments": 1,
      "healthCheckTimeout": 120000,
      "infrastructure": {
        "slots": ["prod-slot-1", "prod-slot-2"],
        "loadBalancer": "prod-lb.anvil.local",
        "database": "prod-db.anvil.local"
      },
      "maintenanceWindows": [
        {
          "day": "sunday",
          "start": "02:00",
          "end": "04:00",
          "timezone": "UTC"
        }
      ]
    }
  },
  "featureTeamConfiguration": {
    "realtime-collaboration": {
      "deploymentPriority": "high",
      "isolationLevel": "namespace",
      "resourceLimits": {
        "cpu": "2 cores",
        "memory": "4GB",
        "storage": "20GB"
      },
      "dependencies": {
        "services": ["api", "websocket-server", "redis"],
        "databases": ["main-db", "session-store"],
        "external": ["push-notification-service"]
      },
      "healthChecks": {
        "endpoints": [
          "/api/realtime/health",
          "/api/collaboration/status",
          "/api/websocket/ping"
        ],
        "customChecks": [
          "realtime-connection-test",
          "collaboration-sync-test"
        ]
      }
    },
    "ai-workflow": {
      "deploymentPriority": "medium",
      "isolationLevel": "container",
      "resourceLimits": {
        "cpu": "4 cores",
        "memory": "8GB",
        "storage": "50GB"
      },
      "dependencies": {
        "services": ["api", "ai-service", "workflow-engine"],
        "databases": ["main-db", "workflow-db"],
        "external": ["ai-model-service", "task-queue"]
      },
      "healthChecks": {
        "endpoints": [
          "/api/ai/health",
          "/api/workflow/status",
          "/api/agents/ping"
        ],
        "customChecks": [
          "ai-model-availability-test",
          "workflow-execution-test"
        ]
      }
    }
  },
  "qualityGates": {
    "required": {
      "unitTests": {
        "enabled": true,
        "coverageThreshold": 80,
        "timeoutMinutes": 10
      },
      "integrationTests": {
        "enabled": true,
        "timeoutMinutes": 15
      },
      "performanceTests": {
        "enabled": true,
        "thresholds": {
          "responseTime": 200,
          "errorRate": 0.1,
          "throughput": 500
        },
        "timeoutMinutes": 20
      },
      "securityScan": {
        "enabled": true,
        "timeoutMinutes": 5
      }
    },
    "optional": {
      "e2eTests": {
        "enabled": true,
        "timeoutMinutes": 30,
        "environments": ["staging", "production"]
      },
      "loadTests": {
        "enabled": false,
        "timeoutMinutes": 45,
        "environments": ["staging"]
      }
    }
  },
  "rollbackConfiguration": {
    "automaticRollback": {
      "enabled": true,
      "triggers": [
        "health-check-failure",
        "performance-degradation",
        "error-rate-spike"
      ],
      "conditions": {
        "healthCheckFailures": 3,
        "performanceDegradation": "20%",
        "errorRateThreshold": "5%"
      }
    },
    "manualRollback": {
      "enabled": true,
      "approvalRequired": {
        "development": false,
        "staging": true,
        "production": true
      }
    }
  },
  "monitoring": {
    "deployment": {
      "logLevel": "info",
      "metricsCollection": true,
      "alerting": true
    },
    "health": {
      "checkInterval": 30000,
      "failureThreshold": 3,
      "recoveryThreshold": 2
    },
    "performance": {
      "monitoringDuration": 300000,
      "baselineComparison": true,
      "alertThresholds": {
        "responseTime": 300,
        "errorRate": 1.0,
        "throughput": 400
      }
    }
  },
  "notifications": {
    "channels": {
      "slack": {
        "enabled": true,
        "webhook": "https://hooks.slack.com/services/...",
        "channels": {
          "deployments": "#deployments",
          "alerts": "#alerts",
          "team-realtime": "#realtime-collaboration",
          "team-ai": "#ai-workflow"
        }
      },
      "email": {
        "enabled": false,
        "smtp": {
          "host": "smtp.anvil.local",
          "port": 587
        }
      }
    },
    "events": {
      "deploymentStarted": ["slack"],
      "deploymentCompleted": ["slack"],
      "deploymentFailed": ["slack", "email"],
      "rollbackTriggered": ["slack", "email"],
      "healthCheckFailed": ["slack"]
    }
  },
  "integrations": {
    "git": {
      "provider": "github",
      "webhooks": {
        "push": true,
        "pullRequest": true,
        "release": true
      }
    },
    "ci": {
      "provider": "github-actions",
      "triggerOnDeploy": true
    },
    "monitoring": {
      "provider": "internal",
      "endpoints": {
        "metrics": "/api/monitoring/metrics",
        "health": "/api/monitoring/health",
        "alerts": "/api/monitoring/alerts"
      }
    }
  }
}